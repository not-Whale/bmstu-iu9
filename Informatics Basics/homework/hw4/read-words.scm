(define (read-words path)
  (define input-file (open-input-file path))
  (define (iter char ss ws)
    (if (eof-object? char)
        (reverse ss)
        (if (or
             (equal? char #\space)
             (equal? char #\tab)
             (equal? char #\return)
             (equal? char #\newline))
            (iter (read-char input-file) ss ws)
            (if (eof-object? (peek-char input-file))
                (iter (read-char input-file) (cons (string-append ws (make-string 1 char)) ss) "")
                (if (or
                     (equal? (peek-char input-file) #\space)
                     (equal? (peek-char input-file) #\tab)
                     (equal? (peek-char input-file) #\return)
                     (equal? (peek-char input-file) #\newline))
                    (iter (read-char input-file) (cons (string-append ws (make-string 1 char)) ss) "")
                    (iter (read-char input-file) ss (string-append ws (make-string 1 char))))))))
  (let ((res (iter (read-char input-file) '() "")))
    (close-input-port input-file)
    res))

(read-words "input-test.txt")
